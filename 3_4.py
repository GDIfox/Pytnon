def thesaurus_adv(*args):
    s_n_sort = {}
    for s_n in args:
        s_n_sort.setdefault(s_n.split()[1][0], {}).setdefault(s_n.split()[0][0], []).append(s_n)
         #         ^для бол.словаря                 ^для внутреннего словоря         ^для списка
        #      предст. знач по ключу [0]
    return s_n_sort
# !!! ВАЖНО - setdefault - если ключ существует - то вернется значение !!!
#          "Сплитуем" [0]     [1] (берем 1 и 0 - букву П)
#           по ключу П мы ищем значение (setdefault) - если не находит формирует пару П и со словарем {}
# далее к пустому словарю {} берем setdefault и проверяем - есть ли ключ со значением Х - если его нет - то его создаем и создаем список []
# и потом мы .append(s_n) - "Харлей Погремушка"
print(thesaurus_adv('Харлей Погремушка', 'Уазик Вездеходим', 'Железяка Мерседесов',
                    'Дмитрий Шкодов', 'Автоваз Корытов', 'Ниссан Муранов', 'Лендровер Поломучка',
                    'Гена Крокодилов', 'Тойота Проходишкин'))


#___________________________________________
# def thesaurus_adv(*names):   #
#     names_dict = {}
#     for name in sorted(names):     # сортируем по имени
#         n, s = name.split()        # разбираем на имя и фамилию -> с пом.split разбиваем на список
#         val = names_dict.setdefault(s[0], {n[0]: [name]})
#         n_val = val.setdefault(n[0], [name])
#         if name not in n_val:
#             n_val.append(name)
#     return names_dict
#
#
# print(thesaurus_adv('Харлей Погремушка', 'Уазик Вездеходим', 'Железяка Мерседесов',
#                     'Дмитрий Шкодов', 'Автоваз Корытов', 'Ниссан Муранов', 'Лендровер Поломучка',
#                     'Гена Крокодилов', 'Тойота Проходишкин'))

